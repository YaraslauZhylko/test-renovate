{
  "enabled": true,
  "hostRules": [
  ],
  "extends": [
    ":semanticCommits",
    ":semanticCommitType(chore)",
    ":semanticCommitScope(deps)",
    ":label(dependencies)",
    ":prImmediately",
    ":rebaseStalePrs",
    ":automergeDisabled",
    ":disableRateLimiting"
  ],
  "circleci": {
    "enabled": true,
    "additionalBranchPrefix": "circleci/",
    "semanticCommitScope": "deps-ci",
    "addLabels": ["circleci"],
    "packageRules": [
      {
        "description": "All orbs in one PR",
        "matchDatasources": ["orb"],
        "groupName": "circleci orbs",
        "groupSlug": "orbs"
      }
    ]
  },
  "docker": {
    "enabled": true,
    "additionalBranchPrefix": "docker/",
    "addLabels": ["docker"]
  },
  "poetry": {
    "enabled": true,
    "additionalBranchPrefix": "poetry/",
    "addLabels": ["python"],
    "packageRules": [
      {
        "description": "All dev dependencies in one PR",
        "matchDepTypes": ["dev-dependencies"],
        "groupName": "python dev dependencies",
        "groupSlug": "dev-dependencies",
        "semanticCommitScope": "deps-dev"
      },
      {
        "description": "Ignore 'arrow' updates till it is properly migrated",
        "matchPackageNames": ["arrow"],
        "enabled": false
      },
      {
        "description": "Ignore major updates of the following packages till they are properly migrated",
        "matchPackageNames": ["fastapi-sqla", "pyramid"],
        "matchUpdateTypes": ["major"],
        "enabled": false
      },
      {
        "description": "Ignore major updates of the following packages because they depend on the above packages that need proper migration",
        "matchPackageNames": ["jsonschema", "pyramid_multiauth"],
        "matchUpdateTypes": ["major"],
        "enabled": false
      }
    ],
    "lockFileMaintenance": {
      "enabled": true
    }
  },
  "pre-commit": {
    "enabled": true,
    "additionalBranchPrefix": "pre-commit/",
    "semanticCommitScope": "deps-dev",
    "addLabels": ["pre-commit"],
    "versioning": "loose",
    "packageRules": [
      {
        "description": "All pre-commit hooks in one PR",
        "matchPackagePatterns": ["*"],
        "groupName": "pre-commit hooks",
        "groupSlug": "hooks"
      }
    ]
  },
  "regexManagers": [
    {
      "fileMatch": ["^(?:app|job)\\.ya?ml$"],
      "matchStrings": [
        "\
(?<depName>\\S+):\\n\
\\s*version:\\s*(?<currentValue>\\S+)\\n\
\\s*repo:\\s*\"(?<appscodeRepo>@appscode)?(?<bitnamiRepo>@bitnami)?(?<elasticRepo>@elastic)?(?<elasticStable>@stable)?(?<unknownRepo>\\S+)?\"\\n"
      ],
      "datasourceTemplate": "helm",
      "registryUrlTemplate": "\
{{#if appscodeRepo}}https://charts.appscode.com/stable/\
{{else if bitnamiRepo}}https://charts.bitnami.com/bitnami\
{{else if elasticRepo}}https://helm.elastic.co\
{{else if stableRepo}}https://charts.helm.sh/stable\
{{/if}}"
    }
  ],
  "setup-cfg": {
    "enabled": false
  },
  "packageRules": [
    {
      "description": "Enforce Docker image version granularity",
      "matchDatasources": ["docker"],
      "separateMultipleMajor": true,
      "separateMajorMinor": true,
      "separateMinorPatch": true
    },
    {
      "description": "Configure Helm dependency updates",
      "matchManagers": ["regex"],
      "matchDatasources": ["helm"],
      "commitMessageTopic": "Helm dependency {{depName}}",
      "additionalBranchPrefix": "k8s/",
      "addLabels": ["k8s"]
    }
  ]
}
